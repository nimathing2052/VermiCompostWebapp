{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///ClientApp/app/app.component.ts","webpack:///ClientApp/app/app.component.html","webpack:///ClientApp/app/app.module.ts","webpack:///ClientApp/app/checkout/checkout.component.ts","webpack:///ClientApp/app/checkout/checkout.component.html","webpack:///ClientApp/app/login/login.component.ts","webpack:///ClientApp/app/login/login.component.html","webpack:///ClientApp/app/shared/dataService.ts","webpack:///ClientApp/app/shared/order.ts","webpack:///ClientApp/app/shop/cart.component.ts","webpack:///ClientApp/app/shop/cart.component.html","webpack:///ClientApp/app/shop/productList.component.ts","webpack:///ClientApp/app/shop/productList.component.html","webpack:///ClientApp/app/shop/shop.component.ts","webpack:///ClientApp/app/shop/shop.component.html","webpack:///ClientApp/environments/environment.ts","webpack:///ClientApp/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styles","routes","path","component","AppModule","forRoot","useHash","enableTracing","declarations","imports","providers","bootstrap","Checkout","data","router","errorMessage","checkout","subscribe","success","navigate","err","onCheckout","styleUrls","Login","creds","username","password","login","order","items","length","onLogin","DataService","http","token","products","get","pipe","post","tokenExpiraton","expiration","orderNumber","orderDate","getFullYear","toString","getTime","headers","set","response","newProduct","item","find","i","productId","quantity","productCategory","category","productDescription","description","productSize","size","productTitle","productVermiImageId","vermiImageID","productManufacturer","manufacturer","unitPrice","price","push","Date","Order","Array","OrderItem","Cart","loginRequired","ProductList","loadProducts","product","addToOrder","Shop","environment","production","bootstrapModule","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'the-shop',\n    templateUrl: \"./app.component.html\",\n    styles: []\n})\nexport class AppComponent {\n    title = 'Product List';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport { ProductList } from \"./shop/productList.component\";\r\nimport { Cart } from \"./shop/cart.component\";\r\nimport { Shop } from \"./shop/shop.component\";\r\nimport { Checkout } from \"./checkout/checkout.component\";\r\nimport { Login } from \"./login/login.component\";\r\n\r\n\r\nimport { DataService } from \"./shared/dataService\";\r\n\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n\r\nlet routes = [\r\n    { path: \"\", component: Shop },\r\n    { path: \"checkout\", component: Checkout },\r\n    { path:  \"login\", component: Login}\r\n];\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        ProductList,\r\n        Cart,\r\n        Shop,\r\n        Checkout,\r\n        Login\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        RouterModule.forRoot(routes, {\r\n            useHash: true,\r\n            enableTracing: false // for Debugging of the Routes\r\n        })\r\n    ],\r\n    providers: [\r\n        DataService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: \"checkout\",\r\n  templateUrl: \"checkout.component.html\",\r\n  styleUrls: ['checkout.component.css']\r\n})\r\nexport class Checkout {\r\n\r\n    constructor(public data: DataService, public router: Router) {\r\n    }\r\n\r\n    errorMessage: string = \"\";\r\n\r\n    onCheckout() {\r\n        this.data.checkout()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.router.navigate([\"/\"]);\r\n                }\r\n            }, err => this.errorMessage = \"Failed to save order\");\r\n    }\r\n}","<div class=\"row\">\r\n    <div *ngIf=\"errorMessage\" class=\"alert alert-warning col-xl-12\">{{ errorMessage }}</div>\r\n    <h3>Confirm Order</h3>\r\n    <table class=\"table table-bordered table-hover\">\r\n        <tr *ngFor=\"let o of data.order.items\">\r\n            <td><img src=\"/images/{{ o.productVermiImageId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\r\n            <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\r\n            <td>{{ o.quantity }}</td>\r\n            <td>{{ o.unitPrice|currency:'NRs.':\"symbol\" }}</td>\r\n            <td>{{ (o.unitPrice * o.quantity)|currency:'NRs.':\"symbol\" }}</td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"col-md-4 col-md-offset-8 text-right\">\r\n        <table class=\"table table-condensed\">\r\n            <tr>\r\n                <td class=\"text-right\">Subtotal</td>\r\n                <td class=\"text-right\">{{ data.order.subtotal|currency:'NRs.':\"symbol\" }}</td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"text-right\">Shipping</td>\r\n                <td class=\"text-right\">NRs. 0.00</td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"text-right\">Total:</td>\r\n                <td class=\"text-right\">{{ data.order.subtotal|currency:'NRs.':\"symbol\" }}</td>\r\n            </tr>\r\n        </table>\r\n        <button class=\"btn btn-success mr-2\" (click)=\"onCheckout()\">Complete Purchase</button>\r\n        <a routerLink=\"/\" class=\"btn btn-outline-primary\">Cancel</a>\r\n    </div>\r\n\r\n</div>","import { Component } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: \"login\",\r\n    templateUrl: \"login.component.html\"\r\n})\r\n\r\nexport class Login {\r\n\r\n    constructor(private data: DataService, private router: Router) {\r\n    }\r\n\r\n    errorMessage: string = \"\";\r\n    public creds = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    onLogin() {\r\n        //Call the login service\r\n        this.data.login(this.creds)\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    if (this.data.order.items.length == 0) {\r\n                        this.router.navigate([\"\"]);\r\n                    } else\r\n                    {\r\n                        this.router.navigate([\"checkout\"]);\r\n                    }\r\n                }\r\n\r\n            }, err => this.errorMessage = \"Failed to Login\")\r\n    }\r\n}","<div class=\"row\">\n    <div class=\"col-md-4 col-md-offset-4\">\n        <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{ errorMessage }}</div>\n        <form (submit)=\"onLogin()\" #theForm=\"ngForm\" novalidate>\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"creds.username\" #username=\"ngModel\" required />\n                <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required\">Username is required!</div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"creds.password\" required #password=\"ngModel\" />\n                <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors.required\">Password is required!</div>\n            </div>\n            <div class=\"form-group\">\n                <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" [disabled]=\"theForm.invalid\" />\n                <a routerLink=\"/\" class=\"btn btn-default\">Cancel</a>\n            </div>\n        </form>\n    </div>\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\"\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from \"./product\";\r\nimport { Order, OrderItem } from \"./order\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiraton: Date;\r\n\r\n    public order: Order = new Order();\r\n\r\n    public products: Product[] = [];\r\n\r\n    loadProducts(): Observable<boolean> {\r\n      return  this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map((data: any[]) => {\r\n                    this.products = data;\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiraton > new Date();\r\n    }\r\n\r\n\r\n    login(creds): Observable<boolean>  {\r\n        return this.http.post(\"/account/createtoken\", creds)\r\n                        .pipe(\r\n                        map((data: any) => {\r\n                            this.token = data.token;\r\n                            this.tokenExpiraton = data.expiration;\r\n                            return true;\r\n                        })); \r\n    }\r\n\r\n    public checkout() {\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\r\n        }\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token)\r\n        })\r\n            .pipe(\r\n                map(response => {\r\n                    this.order = new Order();\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n    public addToOrder(newProduct: Product) {\r\n\r\n\r\n        let item: OrderItem = this.order.items.find(i => i.productId == newProduct.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        }\r\n        else {\r\n\r\n            item = new OrderItem();\r\n            item.productId = newProduct.id;\r\n            item.productCategory = newProduct.category;\r\n            item.productDescription = newProduct.description;\r\n            item.productSize = newProduct.size;\r\n            item.productTitle = newProduct.title;\r\n            item.productVermiImageId = newProduct.vermiImageID;\r\n            item.productManufacturer = newProduct.manufacturer;\r\n            item.unitPrice = newProduct.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n}","import * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n    };\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productDescription: string;\r\n    productManufacturer: string;\r\n    productVermiImageId: string;\r\n}","import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class Cart {\r\n\r\n    constructor(public data: DataService, private router: Router) {\r\n    }\r\n\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            //Force Login\r\n            this.router.navigate([\"login\"]);\r\n        }\r\n        else {\r\n            //Go to Checkout\r\n            this.router.navigate([\"checkout\"]);\r\n        }\r\n    }\r\n}","<h3>Shopping Cart</h3>\r\n<div>#/Items: {{ data.order.items.length }}</div>\r\n<div>Subtotal: {{ data.order.subtotal | currency:\"Rs. \":true  }}</div>\r\n<table class=\"table table-condensed table-hover\">\r\n    <thead>\r\n        <tr>\r\n            <td>Product</td>\r\n            <td>#</td>\r\n            <td>Rupees</td>\r\n            <td>Total</td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let o of data.order.items\">\r\n            <td>{{ o.productCategory }} - {{ o.productTitle }}</td>\r\n            <td>{{ o.quantity }}</td>\r\n            <td>{{ o.unitPrice | currency:\"Rs.\":true }}</td>\r\n            <td>{{ (o.unitPrice * o.quantity) | currency:\"Rs.\":true }}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<button class=\"btn btn-success\" *ngIf=\"data.order.items.length > 0\" (click)=\"onCheckout()\">Checkout</button>","import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [ \"productList.component.css\" ]\r\n\r\n})\r\nexport class ProductList implements OnInit {\r\n\r\n\r\n    public products: Product[] = [];\r\n\r\n    constructor(private data: DataService) {\r\n        this.products = data.products;\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.data.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.data.products;\r\n                }\r\n            });\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.data.addToOrder(product);\r\n    }\r\n}","<div class=\"row\">\r\n    \r\n     <div class=\"product-info col-md-4 well well-lg\" *ngFor=\"let p of products\">\r\n        <div class=\"card bg-light mb-3\" style=\"max-width: 18rem;\">\r\n            <img src=\"/images/{{p.vermiImageID}}.jpg\" class=\"img-fluid\" [alt]=\"p.title\" />\r\n            <div class=\"product-name\">{{p.category}} - {{p.size}}</div>\r\n            <ul class=\"product-props\">\r\n                <li><strong>Price</strong>: {{p.price | currency:\"NRs:\":true }}</li>\r\n                <li><strong>Brand</strong>: {{p.title}} </li>\r\n                <li><strong>Pack Size</strong>: {{p.size}}</li>\r\n                <li><strong>Application</strong>: {{p.description}}</li>\r\n                <li><strong>Packaging Type</strong>: {{p.packagingType}}</li>\r\n                <li><strong>Manufacturer</strong>: {{p.manufacturer}}</li>\r\n            </ul>\r\n            <button id=\"buyButton\" class=\"btn btn-success btn-sm pull-right\" (click)=\"addProduct(p)\">Buy</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"the-shop\",\r\n    templateUrl: \"shop.component.html\"\r\n})\r\nexport class Shop {\r\n\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-9\">\r\n        <!--<h3>{{ title }}</h3>-->\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-md-3\" style=\"width: 400px\">\r\n        <div class=\"card bg-light p-2\" style=\"width: 400px\">\r\n            <the-cart></the-cart>\r\n        </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}